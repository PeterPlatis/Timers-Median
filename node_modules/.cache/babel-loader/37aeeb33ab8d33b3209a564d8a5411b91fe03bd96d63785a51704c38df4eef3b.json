{"ast":null,"code":"var _jsxFileName = \"/Users/peterplatis/Documents/Timers-Median/src/components/TimerWithMedian1.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// export function TimerWithMedian() {\n//     const [startTime, setStartTime] = useState(null);\n//     const [elapsed, setElapsed] = useState(0);\n//     const [running, setRunning] = useState(false);\n//     const [logs, setLogs] = useState([]);\n//     const [allDates, setAllDates] = useState([]);\n//     const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n\n//     const todayKey = `logs-${selectedDate}`;\n\n//     useEffect(() => {\n//         const handleKeyDown = (e) => {\n//             if (e.code === \"Space\") {\n//                 if ([\"INPUT\", \"SELECT\", \"TEXTAREA\"].includes(document.activeElement.tagName)) {\n//                     return;\n//                 }\n//                 e.preventDefault();\n//                 running ? stopTimer() : startTimer();\n//             }\n//         };\n//         window.addEventListener(\"keydown\", handleKeyDown);\n//         return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//     }, [running, elapsed, logs]);\n\n//     useEffect(() => {\n//         const keys = Object.keys(localStorage).filter(key => key.startsWith(\"logs-\"));\n//         setAllDates(keys.map(key => key.replace(\"logs-\", \"\")));\n//     }, []);\n\n//     useEffect(() => {\n//         const saved = localStorage.getItem(todayKey);\n//         setLogs(saved ? JSON.parse(saved) : []);\n//     }, [todayKey]);\n\n//     useEffect(() => {\n//         localStorage.setItem(todayKey, JSON.stringify(logs));\n//         if (!allDates.includes(selectedDate)) {\n//             setAllDates([...allDates, selectedDate]);\n//         }\n//     }, [logs, todayKey, allDates, selectedDate]);\n\n//     useEffect(() => {\n//         let interval;\n//         if (running) {\n//             interval = setInterval(() => {\n//                 setElapsed(Date.now() - startTime);\n//             }, 100);\n//         }\n//         return () => clearInterval(interval);\n//     }, [running, startTime]);\n\n//     const startTimer = () => {\n//         setStartTime(Date.now() - elapsed);\n//         setRunning(true);\n//     };\n\n//     const stopTimer = () => {\n//         setRunning(false);\n//         setLogs([...logs, elapsed]);\n//         setElapsed(0);\n//     };\n\n//     const resetLogs = () => {\n//         setLogs([]);\n//     };\n\n//     const getMedian = () => {\n//         if (logs.length === 0) return 0;\n//         const sorted = [...logs].sort((a, b) => a - b);\n//         const mid = Math.floor(sorted.length / 2);\n//         return sorted.length % 2 !== 0 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2;\n//     };\n\n//     const formatTime = (ms) => {\n//         const seconds = Math.floor(ms / 1000);\n//         const mins = Math.floor(seconds / 60);\n//         const secs = seconds % 60;\n//         const mills = Math.floor((ms % 1000) / 100);\n//         return `${mins}:${secs.toString().padStart(2, \"0\")}.${mills}`;\n//     };\n\n//     return (\n//         <div className=\"w-2xl mx-auto p-6 bg-white shadow-lg rounded-2xl flex flex-col gap-6\">\n//             <h1 className=\"text-3xl font-bold text-center\">Timer for {selectedDate}</h1>\n\n//             {selectedDate === new Date().toISOString().split(\"T\")[0] && (\n//                 <>\n//                     <div className=\"w-full flex justify-center text-left text-9xl md:text-9xl font-normal\">\n//                         <p className=\"w-[360px]\">{formatTime(elapsed)}</p>\n//                     </div>\n//                     <div className=\"grid grid-cols-3 md:flex-row gap-1 h-15 justify-center\">\n//                         {!running ? (\n//                             <button\n//                                 onClick={startTimer}\n//                                 className=\"col-span-2 px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-xl transition\"\n//                             >\n//                                 Start\n//                             </button>\n//                         ) : (\n//                             <button\n//                                 onClick={stopTimer}\n//                                 className=\"col-span-2 px-6 py-3 bg-red-600 hover:bg-red-700 text-white font-semibold rounded-xl transition\"\n//                             >\n//                                 Stop & Log\n//                             </button>\n//                         )}\n//                         <button\n//                             onClick={resetLogs}\n//                             className=\"flex-1 px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white font-semibold rounded-xl transition\"\n//                         >\n//                             Reset Logs\n//                         </button>\n//                     </div>\n//                 </>\n//             )}\n//             <div className=\"self-center h-xl\">\n//                 <h2 className=\"text-xl text-center font-bold mb-1\">Median of the Day</h2>\n//                 <p className=\"text-5xl text-center font-semibold\">{formatTime(getMedian())}</p>\n//             </div>\n//             <div>\n//                 <h2 className=\"text-xl font-semibold mb-2\">Logs</h2>\n//                 <div className=\"h-48 overflow-y-auto border rounded-xl p-4 bg-gray-50\">\n//                     {logs.length > 0 ? (\n//                         <ul className=\"list-disc list-inside space-y-1 text-sm font-extralight\">\n//                             {logs.map((log, index) => (\n//                                 <li key={index} className=\"text-base\">{formatTime(log)}</li>\n//                             ))}\n//                         </ul>\n//                     ) : (\n//                         <p className=\"text-gray-500 italic\">No logs yet.</p>\n//                     )}\n//                 </div>\n//             </div>\n\n//         </div>\n//     );\n// }\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TimerWithMedian() {\n  _s();\n  const [startTime, setStartTime] = useState(null);\n  const [elapsed, setElapsed] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [logs, setLogs] = useState([]);\n  const [allDates, setAllDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const todayKey = `logs-${selectedDate}`;\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === \"Space\") {\n        if ([\"INPUT\", \"SELECT\", \"TEXTAREA\"].includes(document.activeElement.tagName)) {\n          return;\n        }\n        e.preventDefault();\n        running ? stopTimer() : startTimer();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [running, elapsed, logs]);\n  useEffect(() => {\n    const keys = Object.keys(localStorage).filter(key => key.startsWith(\"logs-\"));\n    setAllDates(keys.map(key => key.replace(\"logs-\", \"\")));\n  }, []);\n  useEffect(() => {\n    const saved = localStorage.getItem(todayKey);\n    setLogs(saved ? JSON.parse(saved) : []);\n  }, [todayKey]);\n  useEffect(() => {\n    localStorage.setItem(todayKey, JSON.stringify(logs));\n    if (!allDates.includes(selectedDate)) {\n      setAllDates([...allDates, selectedDate]);\n    }\n  }, [logs, todayKey, allDates, selectedDate]);\n  useEffect(() => {\n    let interval;\n    if (running) {\n      interval = setInterval(() => {\n        setElapsed(Date.now() - startTime);\n      }, 100);\n    }\n    return () => clearInterval(interval);\n  }, [running, startTime]);\n  const startTimer = () => {\n    setStartTime(Date.now() - elapsed);\n    setRunning(true);\n  };\n  const stopTimer = () => {\n    setRunning(false);\n    setLogs([...logs, elapsed]);\n    setElapsed(0);\n  };\n  const resetLogs = () => {\n    setLogs([]);\n  };\n  const getMedian = () => {\n    if (logs.length === 0) return 0;\n    const sorted = [...logs].sort((a, b) => a - b);\n    const mid = Math.floor(sorted.length / 2);\n    return sorted.length % 2 !== 0 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2;\n  };\n  const formatTime = ms => {\n    const seconds = Math.floor(ms / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    const mills = Math.floor(ms % 1000 / 100);\n    return `${mins}:${secs.toString().padStart(2, \"0\")}.${mills}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-6 bg-white dark:bg-gray-900 shadow-lg rounded-2xl flex flex-col gap-6 transition-colors\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center text-gray-800 dark:text-gray-100\",\n      children: [\"Timer for \", selectedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), selectedDate === new Date().toISOString().split(\"T\")[0] && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-7xl md:text-8xl font-mono text-gray-800 dark:text-gray-100\",\n          children: formatTime(elapsed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row gap-4 justify-center\",\n        children: [!running ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startTimer,\n          className: \"flex-1 px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-xl transition\",\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopTimer,\n          className: \"flex-1 px-6 py-3 bg-red-600 hover:bg-red-700 text-white font-semibold rounded-xl transition\",\n          children: \"Stop & Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetLogs,\n          className: \"flex-1 px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white font-semibold rounded-xl transition\",\n          children: \"Reset Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-800 dark:text-gray-100 mb-1\",\n        children: \"Median of the Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-5xl font-mono text-gray-900 dark:text-gray-50\",\n        children: formatTime(getMedian())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-800 dark:text-gray-100 mb-2\",\n        children: \"Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-48 overflow-y-auto border border-gray-300 dark:border-gray-700 rounded-xl p-4 bg-gray-50 dark:bg-gray-800\",\n        children: logs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-decimal list-inside text-gray-800 dark:text-gray-200 font-mono space-y-1\",\n          children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: formatTime(log)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 dark:text-gray-400 italic\",\n          children: \"No logs yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n_s(TimerWithMedian, \"zNcNkQsFY8cZNoLZYIBUBz3ov6k=\");\n_c = TimerWithMedian;\nvar _c;\n$RefreshReg$(_c, \"TimerWithMedian\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TimerWithMedian","_s","startTime","setStartTime","elapsed","setElapsed","running","setRunning","logs","setLogs","allDates","setAllDates","selectedDate","setSelectedDate","Date","toISOString","split","todayKey","handleKeyDown","e","code","includes","document","activeElement","tagName","preventDefault","stopTimer","startTimer","window","addEventListener","removeEventListener","keys","Object","localStorage","filter","key","startsWith","map","replace","saved","getItem","JSON","parse","setItem","stringify","interval","setInterval","now","clearInterval","resetLogs","getMedian","length","sorted","sort","a","b","mid","Math","floor","formatTime","ms","seconds","mins","secs","mills","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","log","index","_c","$RefreshReg$"],"sources":["/Users/peterplatis/Documents/Timers-Median/src/components/TimerWithMedian1.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n\n// export function TimerWithMedian() {\n//     const [startTime, setStartTime] = useState(null);\n//     const [elapsed, setElapsed] = useState(0);\n//     const [running, setRunning] = useState(false);\n//     const [logs, setLogs] = useState([]);\n//     const [allDates, setAllDates] = useState([]);\n//     const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n\n//     const todayKey = `logs-${selectedDate}`;\n\n//     useEffect(() => {\n//         const handleKeyDown = (e) => {\n//             if (e.code === \"Space\") {\n//                 if ([\"INPUT\", \"SELECT\", \"TEXTAREA\"].includes(document.activeElement.tagName)) {\n//                     return;\n//                 }\n//                 e.preventDefault();\n//                 running ? stopTimer() : startTimer();\n//             }\n//         };\n//         window.addEventListener(\"keydown\", handleKeyDown);\n//         return () => window.removeEventListener(\"keydown\", handleKeyDown);\n//     }, [running, elapsed, logs]);\n\n//     useEffect(() => {\n//         const keys = Object.keys(localStorage).filter(key => key.startsWith(\"logs-\"));\n//         setAllDates(keys.map(key => key.replace(\"logs-\", \"\")));\n//     }, []);\n\n//     useEffect(() => {\n//         const saved = localStorage.getItem(todayKey);\n//         setLogs(saved ? JSON.parse(saved) : []);\n//     }, [todayKey]);\n\n//     useEffect(() => {\n//         localStorage.setItem(todayKey, JSON.stringify(logs));\n//         if (!allDates.includes(selectedDate)) {\n//             setAllDates([...allDates, selectedDate]);\n//         }\n//     }, [logs, todayKey, allDates, selectedDate]);\n\n//     useEffect(() => {\n//         let interval;\n//         if (running) {\n//             interval = setInterval(() => {\n//                 setElapsed(Date.now() - startTime);\n//             }, 100);\n//         }\n//         return () => clearInterval(interval);\n//     }, [running, startTime]);\n\n//     const startTimer = () => {\n//         setStartTime(Date.now() - elapsed);\n//         setRunning(true);\n//     };\n\n//     const stopTimer = () => {\n//         setRunning(false);\n//         setLogs([...logs, elapsed]);\n//         setElapsed(0);\n//     };\n\n//     const resetLogs = () => {\n//         setLogs([]);\n//     };\n\n//     const getMedian = () => {\n//         if (logs.length === 0) return 0;\n//         const sorted = [...logs].sort((a, b) => a - b);\n//         const mid = Math.floor(sorted.length / 2);\n//         return sorted.length % 2 !== 0 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2;\n//     };\n\n//     const formatTime = (ms) => {\n//         const seconds = Math.floor(ms / 1000);\n//         const mins = Math.floor(seconds / 60);\n//         const secs = seconds % 60;\n//         const mills = Math.floor((ms % 1000) / 100);\n//         return `${mins}:${secs.toString().padStart(2, \"0\")}.${mills}`;\n//     };\n\n//     return (\n//         <div className=\"w-2xl mx-auto p-6 bg-white shadow-lg rounded-2xl flex flex-col gap-6\">\n//             <h1 className=\"text-3xl font-bold text-center\">Timer for {selectedDate}</h1>\n\n//             {selectedDate === new Date().toISOString().split(\"T\")[0] && (\n//                 <>\n//                     <div className=\"w-full flex justify-center text-left text-9xl md:text-9xl font-normal\">\n//                         <p className=\"w-[360px]\">{formatTime(elapsed)}</p>\n//                     </div>\n//                     <div className=\"grid grid-cols-3 md:flex-row gap-1 h-15 justify-center\">\n//                         {!running ? (\n//                             <button\n//                                 onClick={startTimer}\n//                                 className=\"col-span-2 px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-xl transition\"\n//                             >\n//                                 Start\n//                             </button>\n//                         ) : (\n//                             <button\n//                                 onClick={stopTimer}\n//                                 className=\"col-span-2 px-6 py-3 bg-red-600 hover:bg-red-700 text-white font-semibold rounded-xl transition\"\n//                             >\n//                                 Stop & Log\n//                             </button>\n//                         )}\n//                         <button\n//                             onClick={resetLogs}\n//                             className=\"flex-1 px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white font-semibold rounded-xl transition\"\n//                         >\n//                             Reset Logs\n//                         </button>\n//                     </div>\n//                 </>\n//             )}\n//             <div className=\"self-center h-xl\">\n//                 <h2 className=\"text-xl text-center font-bold mb-1\">Median of the Day</h2>\n//                 <p className=\"text-5xl text-center font-semibold\">{formatTime(getMedian())}</p>\n//             </div>\n//             <div>\n//                 <h2 className=\"text-xl font-semibold mb-2\">Logs</h2>\n//                 <div className=\"h-48 overflow-y-auto border rounded-xl p-4 bg-gray-50\">\n//                     {logs.length > 0 ? (\n//                         <ul className=\"list-disc list-inside space-y-1 text-sm font-extralight\">\n//                             {logs.map((log, index) => (\n//                                 <li key={index} className=\"text-base\">{formatTime(log)}</li>\n//                             ))}\n//                         </ul>\n//                     ) : (\n//                         <p className=\"text-gray-500 italic\">No logs yet.</p>\n//                     )}\n//                 </div>\n//             </div>\n\n\n//         </div>\n//     );\n// }\nimport React, { useState, useEffect } from \"react\";\n\nexport function TimerWithMedian() {\n  const [startTime, setStartTime] = useState(null);\n  const [elapsed, setElapsed] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [logs, setLogs] = useState([]);\n  const [allDates, setAllDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(\n    new Date().toISOString().split(\"T\")[0]\n  );\n\n  const todayKey = `logs-${selectedDate}`;\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.code === \"Space\") {\n        if (\n          [\"INPUT\", \"SELECT\", \"TEXTAREA\"].includes(\n            document.activeElement.tagName\n          )\n        ) {\n          return;\n        }\n        e.preventDefault();\n        running ? stopTimer() : startTimer();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [running, elapsed, logs]);\n\n  useEffect(() => {\n    const keys = Object.keys(localStorage).filter((key) =>\n      key.startsWith(\"logs-\")\n    );\n    setAllDates(keys.map((key) => key.replace(\"logs-\", \"\")));\n  }, []);\n\n  useEffect(() => {\n    const saved = localStorage.getItem(todayKey);\n    setLogs(saved ? JSON.parse(saved) : []);\n  }, [todayKey]);\n\n  useEffect(() => {\n    localStorage.setItem(todayKey, JSON.stringify(logs));\n    if (!allDates.includes(selectedDate)) {\n      setAllDates([...allDates, selectedDate]);\n    }\n  }, [logs, todayKey, allDates, selectedDate]);\n\n  useEffect(() => {\n    let interval;\n    if (running) {\n      interval = setInterval(() => {\n        setElapsed(Date.now() - startTime);\n      }, 100);\n    }\n    return () => clearInterval(interval);\n  }, [running, startTime]);\n\n  const startTimer = () => {\n    setStartTime(Date.now() - elapsed);\n    setRunning(true);\n  };\n\n  const stopTimer = () => {\n    setRunning(false);\n    setLogs([...logs, elapsed]);\n    setElapsed(0);\n  };\n\n  const resetLogs = () => {\n    setLogs([]);\n  };\n\n  const getMedian = () => {\n    if (logs.length === 0) return 0;\n    const sorted = [...logs].sort((a, b) => a - b);\n    const mid = Math.floor(sorted.length / 2);\n    return sorted.length % 2 !== 0\n      ? sorted[mid]\n      : (sorted[mid - 1] + sorted[mid]) / 2;\n  };\n\n  const formatTime = (ms) => {\n    const seconds = Math.floor(ms / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    const mills = Math.floor((ms % 1000) / 100);\n    return `${mins}:${secs.toString().padStart(2, \"0\")}.${mills}`;\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 bg-white dark:bg-gray-900 shadow-lg rounded-2xl flex flex-col gap-6 transition-colors\">\n      <h1 className=\"text-3xl font-bold text-center text-gray-800 dark:text-gray-100\">\n        Timer for {selectedDate}\n      </h1>\n\n      {selectedDate === new Date().toISOString().split(\"T\")[0] && (\n        <>\n          <div className=\"w-full flex justify-center\">\n            <p className=\"text-7xl md:text-8xl font-mono text-gray-800 dark:text-gray-100\">\n              {formatTime(elapsed)}\n            </p>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            {!running ? (\n              <button\n                onClick={startTimer}\n                className=\"flex-1 px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-xl transition\"\n              >\n                Start\n              </button>\n            ) : (\n              <button\n                onClick={stopTimer}\n                className=\"flex-1 px-6 py-3 bg-red-600 hover:bg-red-700 text-white font-semibold rounded-xl transition\"\n              >\n                Stop & Log\n              </button>\n            )}\n            <button\n              onClick={resetLogs}\n              className=\"flex-1 px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white font-semibold rounded-xl transition\"\n            >\n              Reset Logs\n            </button>\n          </div>\n        </>\n      )}\n\n      <div className=\"text-center\">\n        <h2 className=\"text-xl font-semibold text-gray-800 dark:text-gray-100 mb-1\">\n          Median of the Day\n        </h2>\n        <p className=\"text-5xl font-mono text-gray-900 dark:text-gray-50\">\n          {formatTime(getMedian())}\n        </p>\n      </div>\n\n      <div>\n        <h2 className=\"text-xl font-semibold text-gray-800 dark:text-gray-100 mb-2\">\n          Logs\n        </h2>\n        <div className=\"h-48 overflow-y-auto border border-gray-300 dark:border-gray-700 rounded-xl p-4 bg-gray-50 dark:bg-gray-800\">\n          {logs.length > 0 ? (\n            <ul className=\"list-decimal list-inside text-gray-800 dark:text-gray-200 font-mono space-y-1\">\n              {logs.map((log, index) => (\n                <li key={index}>{formatTime(log)}</li>\n              ))}\n            </ul>\n          ) : (\n            <p className=\"text-gray-500 dark:text-gray-400 italic\">No logs yet.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAC9C,IAAIoB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}