{"ast":null,"code":"var _jsxFileName = \"/Users/peterplatis/Documents/Timers-Median/src/components/Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogsViewer() {\n  _s();\n  const [allDates, setAllDates] = useState([]);\n  const [logsByDate, setLogsByDate] = useState({});\n  const [openDropdown, setOpenDropdown] = useState(null);\n  useEffect(() => {\n    const keys = Object.keys(localStorage).filter(key => key.startsWith(\"logs-\"));\n    const dates = keys.map(key => key.replace(\"logs-\", \"\"));\n    const data = {};\n    dates.forEach(date => {\n      const saved = localStorage.getItem(`logs-${date}`);\n      if (saved) {\n        data[date] = JSON.parse(saved);\n      }\n    });\n    setAllDates(dates);\n    setLogsByDate(data);\n  }, []);\n  const formatTime = ms => {\n    const seconds = Math.floor(ms / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    const millis = ms % 1000;\n    return `${mins}:${secs.toString().padStart(2, \"0\")}.${millis}`;\n  };\n  const getMedian = logs => {\n    if (!logs || logs.length === 0) return 0;\n    const sorted = [...logs].sort((a, b) => a - b);\n    const mid = Math.floor(sorted.length / 2);\n    return sorted.length % 2 !== 0 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2;\n  };\n  const toggleDropdown = date => {\n    setOpenDropdown(openDropdown === date ? null : date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-2xl mx-auto bg-white rounded-2xl shadow-md space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"All Saved Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), allDates.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No logs saved yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }, this), allDates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-4 rounded-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full text-left text-xl font-semibold\",\n        onClick: () => toggleDropdown(date),\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), openDropdown === date && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside\",\n          children: logsByDate[date].map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: formatTime(log)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 font-mono\",\n          children: [\"Median: \", formatTime(getMedian(logsByDate[date]))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(LogsViewer, \"a6ZTZBIF4baWggnSkQkJzrUcmnk=\");\n_c = LogsViewer;\nvar _c;\n$RefreshReg$(_c, \"LogsViewer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LogsViewer","_s","allDates","setAllDates","logsByDate","setLogsByDate","openDropdown","setOpenDropdown","keys","Object","localStorage","filter","key","startsWith","dates","map","replace","data","forEach","date","saved","getItem","JSON","parse","formatTime","ms","seconds","Math","floor","mins","secs","millis","toString","padStart","getMedian","logs","length","sorted","sort","a","b","mid","toggleDropdown","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","log","index","_c","$RefreshReg$"],"sources":["/Users/peterplatis/Documents/Timers-Median/src/components/Logs.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function LogsViewer() {\n  const [allDates, setAllDates] = useState([]);\n  const [logsByDate, setLogsByDate] = useState({});\n  const [openDropdown, setOpenDropdown] = useState(null);\n\n  useEffect(() => {\n    const keys = Object.keys(localStorage).filter(key => key.startsWith(\"logs-\"));\n    const dates = keys.map(key => key.replace(\"logs-\", \"\"));\n    const data = {};\n    dates.forEach(date => {\n      const saved = localStorage.getItem(`logs-${date}`);\n      if (saved) {\n        data[date] = JSON.parse(saved);\n      }\n    });\n    setAllDates(dates);\n    setLogsByDate(data);\n  }, []);\n\n  const formatTime = (ms) => {\n    const seconds = Math.floor(ms / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    const millis = ms % 1000;\n    return `${mins}:${secs.toString().padStart(2, \"0\")}.${millis}`;\n  };\n\n  const getMedian = (logs) => {\n    if (!logs || logs.length === 0) return 0;\n    const sorted = [...logs].sort((a, b) => a - b);\n    const mid = Math.floor(sorted.length / 2);\n    return sorted.length % 2 !== 0\n      ? sorted[mid]\n      : (sorted[mid - 1] + sorted[mid]) / 2;\n  };\n\n  const toggleDropdown = (date) => {\n    setOpenDropdown(openDropdown === date ? null : date);\n  };\n\n  return (\n    <div className=\"p-6 max-w-2xl mx-auto bg-white rounded-2xl shadow-md space-y-6\">\n      <h1 className=\"text-2xl font-bold\">All Saved Logs</h1>\n      {allDates.length === 0 && <p>No logs saved yet.</p>}\n      {allDates.map(date => (\n        <div key={date} className=\"border p-4 rounded-xl\">\n          <button\n            className=\"w-full text-left text-xl font-semibold\"\n            onClick={() => toggleDropdown(date)}\n          >\n            {date}\n          </button>\n          {openDropdown === date && (\n            <div className=\"mt-2\">\n              <ul className=\"list-disc list-inside\">\n                {logsByDate[date].map((log, index) => (\n                  <li key={index}>{formatTime(log)}</li>\n                ))}\n              </ul>\n              <p className=\"mt-2 font-mono\">Median: {formatTime(getMedian(logsByDate[date]))}</p>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}