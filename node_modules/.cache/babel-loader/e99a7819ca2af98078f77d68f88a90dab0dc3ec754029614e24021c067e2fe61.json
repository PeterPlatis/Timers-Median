{"ast":null,"code":"var _jsxFileName = \"/Users/peterplatis/Documents/Timers-Median/src/components/Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogsViewer() {\n  _s();\n  const [allDates, setAllDates] = useState([]);\n  const [logsByDate, setLogsByDate] = useState({});\n  useEffect(() => {\n    const keys = Object.keys(localStorage).filter(key => key.startsWith(\"logs-\"));\n    const dates = keys.map(key => key.replace(\"logs-\", \"\"));\n    const data = {};\n    dates.forEach(date => {\n      const saved = localStorage.getItem(`logs-${date}`);\n      if (saved) {\n        data[date] = JSON.parse(saved);\n      }\n    });\n    setAllDates(dates);\n    setLogsByDate(data);\n  }, []);\n  const formatTime = ms => {\n    const seconds = Math.floor(ms / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    const millis = ms % 1000;\n    return `${mins}:${secs.toString().padStart(2, \"0\")}.${millis}`;\n  };\n  const getMedian = logs => {\n    if (!logs || logs.length === 0) return 0;\n    const sorted = [...logs].sort((a, b) => a - b);\n    const mid = Math.floor(sorted.length / 2);\n    return sorted.length % 2 !== 0 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-2xl mx-auto bg-white rounded-2xl shadow-md space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"All Saved Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), allDates.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No logs saved yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 39\n    }, this), allDates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-4 rounded-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc list-inside\",\n        children: logsByDate[date].map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: formatTime(log)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 font-mono\",\n        children: [\"Median: \", formatTime(getMedian(logsByDate[date]))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(LogsViewer, \"nmDhsnjzFwrQbcUkosq+i0/391Q=\");\n_c = LogsViewer;\nvar _c;\n$RefreshReg$(_c, \"LogsViewer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LogsViewer","_s","allDates","setAllDates","logsByDate","setLogsByDate","keys","Object","localStorage","filter","key","startsWith","dates","map","replace","data","forEach","date","saved","getItem","JSON","parse","formatTime","ms","seconds","Math","floor","mins","secs","millis","toString","padStart","getMedian","logs","length","sorted","sort","a","b","mid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","log","index","_c","$RefreshReg$"],"sources":["/Users/peterplatis/Documents/Timers-Median/src/components/Logs.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function LogsViewer() {\n    const [allDates, setAllDates] = useState([]);\n    const [logsByDate, setLogsByDate] = useState({});\n\n    useEffect(() => {\n        const keys = Object.keys(localStorage).filter(key => key.startsWith(\"logs-\"));\n        const dates = keys.map(key => key.replace(\"logs-\", \"\"));\n        const data = {};\n        dates.forEach(date => {\n            const saved = localStorage.getItem(`logs-${date}`);\n            if (saved) {\n                data[date] = JSON.parse(saved);\n            }\n        });\n        setAllDates(dates);\n        setLogsByDate(data);\n    }, []);\n\n    const formatTime = (ms) => {\n        const seconds = Math.floor(ms / 1000);\n        const mins = Math.floor(seconds / 60);\n        const secs = seconds % 60;\n        const millis = ms % 1000;\n        return `${mins}:${secs.toString().padStart(2, \"0\")}.${millis}`;\n    };\n\n    const getMedian = (logs) => {\n        if (!logs || logs.length === 0) return 0;\n        const sorted = [...logs].sort((a, b) => a - b);\n        const mid = Math.floor(sorted.length / 2);\n        return sorted.length % 2 !== 0\n            ? sorted[mid]\n            : (sorted[mid - 1] + sorted[mid]) / 2;\n    };\n\n    return (\n        <div className=\"p-6 max-w-2xl mx-auto bg-white rounded-2xl shadow-md space-y-6\">\n            <h1 className=\"text-2xl font-bold\">All Saved Logs</h1>\n            {allDates.length === 0 && <p>No logs saved yet.</p>}\n            {allDates.map(date => (\n                <div key={date} className=\"border p-4 rounded-xl\">\n                    <h2 className=\"text-xl font-semibold\">{date}</h2>\n                    <ul className=\"list-disc list-inside\">\n                        {logsByDate[date].map((log, index) => (\n                            <li key={index}>{formatTime(log)}</li>\n                        ))}\n                    </ul>\n                    <p className=\"mt-2 font-mono\">Median: {formatTime(getMedian(logsByDate[date]))}</p>\n                </div>\n            ))}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}