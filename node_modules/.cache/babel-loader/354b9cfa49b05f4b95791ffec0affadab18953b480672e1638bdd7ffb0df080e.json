{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MonthMedian(){const[allDates,setAllDates]=useState([]);const[logsByDate,setLogsByDate]=useState({});const[selectedMonth,setSelectedMonth]=useState(\"\");useEffect(()=>{const keys=Object.keys(localStorage).filter(key=>key.startsWith(\"logs-\"));const dates=keys.map(key=>key.replace(\"logs-\",\"\"));const data={};dates.forEach(date=>{const saved=localStorage.getItem(`logs-${date}`);if(saved){data[date]=JSON.parse(saved);}});setAllDates(dates);if(dates.length>0){const today=new Date();const monthStr=today.toISOString().slice(0,7);setSelectedMonth(monthStr);}setLogsByDate(data);},[]);const formatTime=ms=>{const seconds=Math.floor(ms/1000);const mins=Math.floor(seconds/60);const secs=seconds%60;const mills=ms%1000;return`${mins}:${secs.toString().padStart(2,\"0\")}.${mills}`;};const getMedian=values=>{if(!values||values.length===0)return 0;const sorted=[...values].sort((a,b)=>a-b);const mid=Math.floor(sorted.length/2);return sorted.length%2!==0?sorted[mid]:(sorted[mid-1]+sorted[mid])/2;};const allLogsForMonth=allDates.filter(date=>date.startsWith(selectedMonth)).flatMap(date=>logsByDate[date]||[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"component p-6 max-w-2xl mx-auto bg-white rounded-2xl shadow-md space-y-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:\"Monthly Median Viewer\"}),allDates.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No logs saved yet.\"}),allDates.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"mr-2 font-semibold\",children:\"Select Month:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"month\",value:selectedMonth,onChange:e=>setSelectedMonth(e.target.value),className:\"border p-2 rounded-xl\"})]}),allLogsForMonth.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"border p-4 rounded-xl\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-semibold\",children:[\"Median for \",selectedMonth]}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 font-mono\",children:formatTime(getMedian(allLogsForMonth))})]}):selectedMonth&&/*#__PURE__*/_jsx(\"p\",{children:\"No logs for selected month.\"})]});}","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","MonthMedian","allDates","setAllDates","logsByDate","setLogsByDate","selectedMonth","setSelectedMonth","keys","Object","localStorage","filter","key","startsWith","dates","map","replace","data","forEach","date","saved","getItem","JSON","parse","length","today","Date","monthStr","toISOString","slice","formatTime","ms","seconds","Math","floor","mins","secs","mills","toString","padStart","getMedian","values","sorted","sort","a","b","mid","allLogsForMonth","flatMap","className","children","type","value","onChange","e","target"],"sources":["/Users/peterplatis/Documents/Timers-Median/src/components/MonthMedian.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function MonthMedian() {\n    const [allDates, setAllDates] = useState([]);\n    const [logsByDate, setLogsByDate] = useState({});\n    const [selectedMonth, setSelectedMonth] = useState(\"\");\n\n    useEffect(() => {\n        const keys = Object.keys(localStorage).filter(key => key.startsWith(\"logs-\"));\n        const dates = keys.map(key => key.replace(\"logs-\", \"\"));\n        const data = {};\n        dates.forEach(date => {\n            const saved = localStorage.getItem(`logs-${date}`);\n            if (saved) {\n                data[date] = JSON.parse(saved);\n            }\n        });\n        setAllDates(dates);\n        if (dates.length > 0) {\n            const today = new Date();\n            const monthStr = today.toISOString().slice(0, 7);\n            setSelectedMonth(monthStr);\n        }\n        setLogsByDate(data);\n    }, []);\n\n    const formatTime = (ms) => {\n        const seconds = Math.floor(ms / 1000);\n        const mins = Math.floor(seconds / 60);\n        const secs = seconds % 60;\n        const mills = ms % 1000;\n        return `${mins}:${secs.toString().padStart(2, \"0\")}.${mills}`;\n    };\n\n    const getMedian = (values) => {\n        if (!values || values.length === 0) return 0;\n        const sorted = [...values].sort((a, b) => a - b);\n        const mid = Math.floor(sorted.length / 2);\n        return sorted.length % 2 !== 0\n            ? sorted[mid]\n            : (sorted[mid - 1] + sorted[mid]) / 2;\n    };\n\n    const allLogsForMonth = allDates\n        .filter(date => date.startsWith(selectedMonth))\n        .flatMap(date => logsByDate[date] || []);\n\n    return (\n        <div className=\"component p-6 max-w-2xl mx-auto bg-white rounded-2xl shadow-md space-y-6\">\n            <h1 className=\"text-2xl font-bold\">Monthly Median Viewer</h1>\n            {allDates.length === 0 && <p>No logs saved yet.</p>}\n            {allDates.length > 0 && (\n                <div className=\"mb-4\">\n                    <label className=\"mr-2 font-semibold\">Select Month:</label>\n                    <input\n                        type=\"month\"\n                        value={selectedMonth}\n                        onChange={(e) => setSelectedMonth(e.target.value)}\n                        className=\"border p-2 rounded-xl\"\n                    />\n                </div>\n            )}\n            {allLogsForMonth.length > 0 ? (\n                <div className=\"border p-4 rounded-xl\">\n                    <h2 className=\"text-xl font-semibold\">Median for {selectedMonth}</h2>\n                    <p className=\"mt-2 font-mono\">{formatTime(getMedian(allLogsForMonth))}</p>\n                </div>\n            ) : (\n                selectedMonth && <p>No logs for selected month.</p>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}